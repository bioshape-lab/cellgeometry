"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5589],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(a),m=n,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return a?r.createElement(f,i(i({ref:t},u),{},{components:a})):r.createElement(f,i({ref:t},u))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},187:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:1},i="\ud83d\udcd8 Formatting your Input Data",l={unversionedId:"tutorial-basics/create-a-page",id:"tutorial-basics/create-a-page",title:"\ud83d\udcd8 Formatting your Input Data",description:"Preparing your Data",source:"@site/docs/tutorial-basics/create-a-page.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/create-a-page",permalink:"/cellgeometry/docs/tutorial-basics/create-a-page",draft:!1,editUrl:"https://github.com/bioshape-lab/cellgeometry/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/create-a-page.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial - Basics",permalink:"/cellgeometry/docs/category/tutorial---basics"},next:{title:"Create a Document",permalink:"/cellgeometry/docs/tutorial-basics/create-a-document"}},s={},c=[{value:"Preparing your Data",id:"preparing-your-data",level:2},{value:"\ud83d\udcdc Format &amp; Structure",id:"-format--structure",level:3},{value:"\ud83d\udda5\ufe0f Data Parsing Procedure",id:"\ufe0f-data-parsing-procedure",level:3},{value:"Preparing Your Coordinate Data",id:"preparing-your-coordinate-data",level:2},{value:"\ud83d\udcdc Desired Format &amp; Structure",id:"-desired-format--structure",level:4},{value:"\ud83d\udda5\ufe0f Helper Functions to Convert Your Data",id:"\ufe0f-helper-functions-to-convert-your-data",level:3},{value:"\u2757 Common Mistakes &amp; Corrections",id:"-common-mistakes--corrections",level:3},{value:"\ud83d\ude80 Ready to Proceed?",id:"-ready-to-proceed",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-formatting-your-input-data"},"\ud83d\udcd8 Formatting your Input Data"),(0,n.kt)("h2",{id:"preparing-your-data"},"Preparing your Data"),(0,n.kt)("p",null,"Greetings, Cell Shape Researcher! \ud83e\uddea Before you embark on your analysis, it's crucial to ensure that your data is formatted correctly for our application."),(0,n.kt)("h3",{id:"-format--structure"},"\ud83d\udcdc Format & Structure"),(0,n.kt)("p",null,"Your data should be presented in a text file with xy coordinates for each cell:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Each xy coordinate pair should be separated by a space."),(0,n.kt)("li",{parentName:"ul"},"Different cells should be distinguished with a line break.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"x1 y1\nx2 y2\nx3 y3\n...\n\nx1 y1\nx2 y2\n")),(0,n.kt)("p",null,"Each pair denotes a point on the cell's boundary. The blank line signifies the start of a new cell's data."),(0,n.kt)("h3",{id:"\ufe0f-data-parsing-procedure"},"\ud83d\udda5\ufe0f Data Parsing Procedure"),(0,n.kt)("p",null,"Our application utilizes a specialized function to process your data:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def parse_coordinates(file_path):\n    # ... (function definition as you provided) ...\n")),(0,n.kt)("p",null,"This function segregates the cells based on line breaks and delineates individual points using spaces."),(0,n.kt)("h2",{id:"preparing-your-coordinate-data"},"Preparing Your Coordinate Data"),(0,n.kt)("p",null,"Welcome to the Cell Shape Analysis App! To ensure a smooth and efficient analysis, it's essential that your cell shape coordinate data is in the correct format. Let's delve into how you can achieve this."),(0,n.kt)("h4",{id:"-desired-format--structure"},"\ud83d\udcdc Desired Format & Structure"),(0,n.kt)("p",null,"Your data should be structured in the following manner:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Each xy coordinate pair should be separated by a space."),(0,n.kt)("li",{parentName:"ul"},"Different cells should be distinguished with a line break.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"x1 y1\nx2 y2\nx3 y3\n...\n\nx1 y1\nx2 y2\n")),(0,n.kt)("h3",{id:"\ufe0f-helper-functions-to-convert-your-data"},"\ud83d\udda5\ufe0f Helper Functions to Convert Your Data"),(0,n.kt)("p",null,"If your data isn't already in this format, don't worry! Below are a few Python helper functions to assist you in converting your data:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"From List of Lists to Desired Format"),":\nIf you have your data in a list of lists (where each list represents a cell's coordinates), use this function:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def from_lists_to_format(cells):\n    formatted_data = ""\n    for cell in cells:\n        for coord in cell:\n            formatted_data += f"{coord[0]} {coord[1]}\\n"\n        formatted_data += "\\n"\n    return formatted_data\n')),(0,n.kt)("p",null,"Usage:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"data = [\n    [[1,2], [3,4], [5,6]],\n    [[7,8], [9,10]]\n]\nformatted_data = from_lists_to_format(data)\nprint(formatted_data)\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"From CSV to Desired Format"),":\nIf your data is in a CSV format where each row represents a coordinate and each cell is separated by a new row, use this function:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'import csv\n\ndef from_csv_to_format(csv_path):\n    formatted_data = ""\n    with open(csv_path, \'r\') as file:\n        reader = csv.reader(file)\n        for row in reader:\n            formatted_data += f"{row[0]} {row[1]}\\n"\n        formatted_data += "\\n"\n    return formatted_data\n')),(0,n.kt)("p",null,"Usage:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'formatted_data = from_csv_to_format("path_to_your_file.csv")\nprint(formatted_data)\n')),(0,n.kt)("p",null,"Once you've transformed your data using one of the helper functions above, you can save the output to a text file or directly input it into our Cell Shape Analysis App."),(0,n.kt)("p",null,"\ud83d\udd0d ",(0,n.kt)("strong",{parentName:"p"},"Tip"),": Always double-check your formatted data to ensure there aren't any discrepancies. Proper data preparation is the foundation of accurate analysis. Happy Analyzing! \ud83c\udf89"),(0,n.kt)("h3",{id:"-common-mistakes--corrections"},"\u2757 Common Mistakes & Corrections"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Missing Line Breaks"),": Ensure each cell's data is separated by a line break. This distinction is vital for accurate analysis."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Incorrect Delimiters"),": Use a space to demarcate the x and y coordinates. Other delimiters will lead to parsing errors."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Extraneous Data"),": Only include the xy coordinates in the file. Any additional data will be disregarded.")),(0,n.kt)("h3",{id:"-ready-to-proceed"},"\ud83d\ude80 Ready to Proceed?"),(0,n.kt)("p",null,"With your data formatted correctly, you're poised to unlock insights into the world of cell shapes. Ensure adherence to the guidelines for optimal results."),(0,n.kt)("p",null,"\ud83e\udd13 ",(0,n.kt)("strong",{parentName:"p"},"Tip"),": Cells might be small, but their details are profound. Happy Analyzing! \ud83c\udf89"))}d.isMDXComponent=!0}}]);